name: Release test actions
# **What it does**: Build the maven project as release version and publish the artifact in forgerock maven repo
# **Artifacts**: parent Project Object Model (super POM)
# **Artifact repository**: https://maven.forgerock.org/artifactory/community/com/forgerock/sapi/gateway/
on:
  workflow_dispatch:
    inputs:
      from_tag:
        description: "from_tag: Should create the release from a tag?"
        required: false
        type: boolean
        default: false
      tag:
        description: "Provide the tag (required if from_tag is true)"
        required: false
        type: string
      notes:
        description: "Release notes"
        required: false
        type: string
        default: ""
      is-final-release:
        description: "Is a final release, otherwise will be a 'rc' (release candidate)"
        required: false
        type: boolean
        default: false
      candidate-number:
        description: "Provide the candidate sequence number (default: 1)"
        required: false
        type: string
        default: 1
env:
  # GH_TOKEN: ${{ github.token }}
  GIT_AUTHOR_NAME: ${{ secrets.GIT_COMMIT_USERNAME }}
  GIT_AUTHOR_EMAIL: ${{ secrets.GIT_COMMIT_AUTHOR_EMAIL }}
  GIT_COMMITTER_NAME: ${{ secrets.GIT_COMMIT_USERNAME }}
  GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMIT_AUTHOR_EMAIL }}

jobs:
  check-inputs:
    runs-on: ubuntu-latest
    name: check inputs integrity
    steps:
      - name: check inputs
        run: |
          if [ ${{ inputs.from_tag }} ]; then
            if [ ! -n ${{ inputs.tag }} ]; then
              echo "The tag value is mandatory when from tag is set as true"
              exit 1 
            fi
          fi
  show-inputs:
    runs-on: ubuntu-latest
    name: show inputs
    needs: check-inputs
    if: success()
    steps:
      - name: show inputs
        run: |
          echo "from_tag: ${{ inputs.from_tag }}"
          echo "tag: ${{ inputs.tag }}"
          echo "notes: ${{ inputs.notes }}"
          echo "is-final-release: ${{ inputs.is-final-release }}"
          echo "candidate-number: ${{ inputs.candidate-number }}"

  call-release-from-master:
    needs: show-inputs
    if: ${{ !inputs.from_tag }}
    uses: ./.github/workflows/release-from-master.yml
    with:
      is-final-release: ${{ inputs.is-final-release }}
      candidate-number: ${{ inputs.candidate-number }}
      set-property-command: "mvn versions:set-property -Dproperty=property.test.version -DnewVersion=8.0.0"


  call-release-from-tag:
    needs: show-inputs
    if: ${{ inputs.from_tag }}
    uses: ./.github/workflows/release-from-tag.yml
    with:
      tag: ${{ inputs.tag }}

  prepare:
    runs-on: ubuntu-latest
    name: release
    needs: call-release-from-master
    steps:
      - name: prepare variables
        run: |
          if [ ${{ !inputs.from_tag }} ]; then
            echo "release_tag=${{ needs.call-release-from-master.outputs.release_tag }}" >> $GITHUB_ENV
            echo "release_branch=${{ needs.call-release-from-master.outputs.release_branch }}" >> $GITHUB_ENV
          else
            echo "release_tag=${{ needs.call-release-from-tag.outputs.release_tag }}" >> $GITHUB_ENV
            echo "release_branch=${{ needs.call-release-from-tag.outputs.release_branch }}" >> $GITHUB_ENV
          fi
      - name: show variables
        run: |
          echo "release_tag: ${{ env.release_tag }}"
          echo "release_branch: ${{ env.release_branch }}"

      # https://github.com/actions/checkout
      - uses: actions/checkout@v3
        name: checkout master

      # https://github.com/crazy-max/ghaction-import-gpg
      # https://httgp.com/signing-commits-in-github-actions/
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.BOT_GPG_KEY_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: checkout branch
        run: |
          git checkout ${{ env.release_tag }}

      - uses: actions/setup-java@v3
        name: set java and maven cache
        with:
          distribution: 'adopt'
          java-version: '14'
          architecture: x64
          cache: 'maven'

      - name: show data
        run: |
          ls -al
          git branch -l

