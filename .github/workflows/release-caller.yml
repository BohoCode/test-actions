name: Start release
# **What it does**: Build the maven project as release version and publish the artifact in forgerock maven repo
# **Artifacts**: parent Project Object Model (super POM)
# **Artifact repository**: https://maven.forgerock.org/artifactory/community/com/forgerock/sapi/gateway/
on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Provide the tag if you want create the release from existing tag"
        required: false
        type: string
        default: ''
      notes:
        description: "Release notes"
        required: false
        type: string
        default: ''
      is-final-release:
        description: "Is a final release, otherwise will be a 'rc' (release candidate)"
        required: false
        type: boolean
        default: false
      candidate-number:
        description: "Provide the candidate sequence number (default: 1)"
        required: false
        type: string
        default: 1
env:
  GH_TOKEN: ${{ github.token }}
  GIT_AUTHOR_NAME: ${{ secrets.GIT_COMMIT_USERNAME }}
  GIT_AUTHOR_EMAIL: ${{ secrets.GIT_COMMIT_AUTHOR_EMAIL }}
  GIT_COMMITTER_NAME: ${{ secrets.GIT_COMMIT_USERNAME }}
  GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMIT_AUTHOR_EMAIL }}

jobs:
#  show-inputs:
#    runs-on: ubuntu-latest
#    name: show inputs
#    steps:
#      - name: show inputs
#        run: |
#          echo "tag: ${{ inputs.tag }}"
#          echo "notes: ${{ inputs.notes }}"
#          echo "is-final-release: ${{ inputs.is-final-release }}"
#          echo "candidate-number: ${{ inputs.candidate-number }}"

  prepare-release:
    name: prepare release
#    needs: show-inputs
    uses: ./.github/workflows/prepare-release.yml
    with:
      tag: ${{ inputs.tag }}
      is-final-release: ${{ inputs.is-final-release }}
      candidate-number: ${{ inputs.candidate-number }}
      set-property-command: "mvn versions:set-property -Dproperty=property.test.version -DnewVersion=8.0.0"
    secrets: inherit

  build-release:
    runs-on: ubuntu-latest
    name: build and publish release
    needs: prepare-release
    steps:
      - name: prepare context
        run: |
          echo "release ref: ${{ needs.prepare-release.outputs.release_ref }}"
          echo "release_ref=${{ needs.prepare-release.outputs.release_ref }}" >> $GITHUB_ENV

#      - name: show variables
#        run: |
#          echo "release_tag: ${{ env.release_tag }}"
#          echo "release_branch: ${{ env.release_branch }}"

      # https://github.com/actions/checkout
      - uses: actions/checkout@v3
        name: checkout master
        with:
          ref: ${{ inputs.tag }} # if tag is empty uses the default branch

      # https://github.com/crazy-max/ghaction-import-gpg
      # https://httgp.com/signing-commits-in-github-actions/
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.BOT_GPG_KEY_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: checkout branch
        if: ${{ inputs.tag }} == '' && ${{ env.release_ref }} != ''
        run: |
          # git fetch --all
          git checkout origin/${{ env.release_ref }}

      - uses: actions/setup-java@v3
        name: set java and maven cache
        with:
          distribution: 'adopt'
          java-version: '14'
          architecture: x64
          cache: 'maven'

      - name: show data
        run: |
          ls -al
          git branch -l

      - name: deploy release
        run: |
          mvn clean deploy -DaltDeploymentRepository=release::default::"https://${{ secrets.FR_ARTIFACTORY_USER }}:${{ secrets.FR_ARTIFACTORY_TOKEN }}@maven.forgerock.org/artifactory/community/"

      - name: Create github release
        if: success()
        run: |
          # Create a release from input tag
          gh release create  ${{ env.release_ref }} -t "${{ env.release_ref }}" --notes "${{ inputs.notes }}" # --generate-notes

      - name: Prepare next development interation
        run: |
          mvn versions:set -DnextSnapshot
          git add .
          git commit -m "Prepare the next development iteration"
          git push origin ${{ env.release_ref }}
